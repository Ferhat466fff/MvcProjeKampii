@model EntitiyLayer.Concrete.Writer
@{
    ViewBag.Title = "UpdateWriter";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<h2>Yazar Düzenleme Sayfası</h2>
<br />


@using (Html.BeginForm("UpdateWriter", "AdminWriter", FormMethod.Post))//beginform-->Sayfa açıldığında ne olsun.1.p-->methotadı 2.p-->controller 3.p-->ekle-sil-listeleye göre post mu get mi kullanacksın.
{
    <div class="form-group">
        @Html.HiddenFor(x => x.WriterId)
        <label>Görsel</label>
        @Html.TextBoxFor(x => x.WriterImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterImage, "", new { @class = "text-danger" })
        <br />
        <label>Ünvan</label>
        @Html.TextBoxFor(x => x.WriterTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterTitle, "", new { @class = "text-danger" })
        <br />
        <label>İsim</label>
        @Html.TextBoxFor(x => x.WriterName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterName, "", new { @class = "text-danger" })
        <br />
        <label>Soyisim</label>
        @Html.TextBoxFor(x => x.WriterSurName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterSurName, "", new { @class = "text-danger" })
        <br />
        <label>Mail</label>
        @Html.TextBoxFor(x => x.WriterMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterMail, "", new { @class = "text-danger" })
        <br />

        <label>Şifre</label>
        @Html.PasswordFor(x => x.WriterPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterPassword, "", new { @class = "text-danger" })
        <br />
        <label>Hakkında</label>
        @Html.TextAreaFor(x => x.WriterAbout, 5, 1, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.WriterAbout, "", new { @class = "text-danger" })
        <br />

        <button class="btn btn-primary">Güncelle</button>


    </div>
}